// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  bio         String?
  image       String?
  articles    Article[] @relation("AuthorArticles")
  comments    Comment[]
  favorites   Favorite[]
  following   Follow[]  @relation("Following")
  followers   Follow[]  @relation("Followers")
}

model Article {
  id             Int         @id @default(autoincrement())
  slug           String      @unique
  title          String
  description    String
  body           String
  tagList        String[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  authorId       Int
  author         User        @relation(fields: [authorId], references: [id], name: "AuthorArticles")
  comments       Comment[]
  favorites      Favorite[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  body       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  authorId   Int
  articleId  Int
  author     User     @relation(fields: [authorId], references: [id])
  article    Article  @relation(fields: [articleId], references: [id])
}

model Follow {
  followerId Int
  followingId Int
  createdAt DateTime @default(now())
  follower   User @relation("Following", fields: [followerId], references: [id])
  following  User @relation("Followers", fields: [followingId], references: [id])
  @@id([followerId, followingId])
}

model Favorite {
  userId    Int
  articleId Int
  createdAt DateTime @default(now())
  user      User    @relation(fields: [userId], references: [id])
  article   Article @relation(fields: [articleId], references: [id])
  @@id([userId, articleId])
}

